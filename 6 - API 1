
DriverManager
. DriverManager(区动管理类)作用:
  1.注册驱动
  2.获取数据库连接


getConnection (String url,String user,String password)                  尝试建立与给定数据库URL的连接。



1．注册驱动
Class.forName("com.mysql.jdbc.Driver");
. 查看Driver类源码
static {
    try {
        DriverManager.registerDriver(new Driver());
    } catch (SQLException var1) {
        throw new RuntimeException("Can't register driver!");
    }
}

提示:
. MySQL 5之后的驱动包，可以省略注册驱动的步骤
·自动加载jar包中META-INF/services/java.sql.Driver文件中的驱动类



2.获取连接
static Connection                 getconnecon (String url,String user,String password)

· 参数
  1. url:连接路径
    语法: jdbc:mysql:/lip地址(域名):端口号/数据库名称?参数键值对1&参数键值对2...
    示例: jdbc:mysql://127.0.0.1:3306/db1
    细节:
      ·如果连接的是本机mysql服务器，并且mysql服务默认端口是3306，则ur可以简写为: jdbc:mysql:/数据库名称?参数键值对
      ·配置useSSL=false 参数，禁用安全连接方式，解决警告提示
  2. user:用户名
  3. password:密码









Connection
. Connection(数据库连接对象)作用:
  1.获取执行, SQL的对象
  
 .普通执行SQL对象
    Statement createStatement()
 ·预编译SQL的执行SQL对象:防止SQL注入
    PreparedStatement prepareStatement(sql)
 .执行存储过程的对象
    CallableStatement prepareCall(sql)
 
  
  2.管理事务

.MySQL事务管理
    开启事务:BEGIN; /START TRANSACTION;
    提交事务:COMMIT;
    回滚事务:ROLLBACK;
    
    MySQL默认自动提交事务
    
.JDBC事务管理:Connection接口中定义了3个对应的方法
    开启事务: setAutoCommit(boolean autoCommit): true为自动提交事务; false为手动提交事务，即为开启事务
    提交事务: commit()
    回滚事务: rollback()










Statement
.Statement作用:
  1.执行SQL语句
.执行SQL语句
  int executeUpdate(sql):执行DML、DDL语句
  返回值:(1)DML语句影响的行数
         (2)DDL语句执行后，执行成功也可能返回O
  
  ResultSet executeQuery(sql):执行DQL语句
  返回值:ResultSet结果集对象




















